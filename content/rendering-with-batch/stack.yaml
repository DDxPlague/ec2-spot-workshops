Resources:
  Vpc8378EB38:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: RenderingWithBatchStack/Vpc
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/Resource
  VpcRenderingWithBatchSubnet1SubnetADE6DAA0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: RenderingWithBatch
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet1
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet1/Subnet
  VpcRenderingWithBatchSubnet1RouteTable1BCC3903:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet1
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet1/RouteTable
  VpcRenderingWithBatchSubnet1RouteTableAssociation9592115F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcRenderingWithBatchSubnet1RouteTable1BCC3903
      SubnetId:
        Ref: VpcRenderingWithBatchSubnet1SubnetADE6DAA0
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet1/RouteTableAssociation
  VpcRenderingWithBatchSubnet1DefaultRoute58E16100:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcRenderingWithBatchSubnet1RouteTable1BCC3903
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet1/DefaultRoute
  VpcRenderingWithBatchSubnet2SubnetDC61207B:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.1.0/24
      VpcId:
        Ref: Vpc8378EB38
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: RenderingWithBatch
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet2
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet2/Subnet
  VpcRenderingWithBatchSubnet2RouteTable5DF00176:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      Tags:
        - Key: Name
          Value: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet2
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet2/RouteTable
  VpcRenderingWithBatchSubnet2RouteTableAssociationE3297937:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VpcRenderingWithBatchSubnet2RouteTable5DF00176
      SubnetId:
        Ref: VpcRenderingWithBatchSubnet2SubnetDC61207B
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet2/RouteTableAssociation
  VpcRenderingWithBatchSubnet2DefaultRoute42CB5476:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VpcRenderingWithBatchSubnet2RouteTable5DF00176
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VpcIGWD7BA715C
    DependsOn:
      - VpcVPCGWBF912B6E
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/RenderingWithBatchSubnet2/DefaultRoute
  VpcIGWD7BA715C:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: RenderingWithBatchStack/Vpc
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/IGW
  VpcVPCGWBF912B6E:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: Vpc8378EB38
      InternetGatewayId:
        Ref: VpcIGWD7BA715C
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/Vpc/VPCGW
  securityGroup32C48086:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RenderingWithBatchStack/securityGroup
      GroupName: RenderingWithBatch
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: Vpc8378EB38
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/securityGroup/Resource
  bucket43879C71:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: rendering-with-batch-f299d775-2365-47e2-963d-e3567dd03482
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/bucket/Resource
  repository9F1A3F0B:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: rendering-with-batch
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/repository/Resource
  launchTemplateDEE5742D:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        SecurityGroupIds:
          - Fn::GetAtt:
              - securityGroup32C48086
              - GroupId
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: RenderingWithBatchStack/launchTemplate
          - ResourceType: volume
            Tags:
              - Key: Name
                Value: RenderingWithBatchStack/launchTemplate
        UserData:
          Fn::Base64: |-
            MIME-Version: 1.0
            Content-Type: multipart/mixed; boundary="==MYBOUNDARY=="

            --==MYBOUNDARY==
            Content-Type: text/x-shellscript; charset="us-ascii"

            #!/bin/bash
            echo "ECS_CLUSTER=EcsSpotWorkshop" >> /etc/ecs/ecs.config
            echo "ECS_ENABLE_SPOT_INSTANCE_DRAINING=true" >> /etc/ecs/ecs.config
            echo "ECS_CONTAINER_STOP_TIMEOUT=90s" >> /etc/ecs/ecs.config
            echo "ECS_ENABLE_CONTAINER_METADATA=true" >> /etc/ecs/ecs.config

            --==MYBOUNDARY==--
      LaunchTemplateName: RenderingWithBatch
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/launchTemplate/Resource
  cloud9ec2env53572621:
    Type: AWS::Cloud9::EnvironmentEC2
    Properties:
      InstanceType: t2.micro
      Name: RenderingWithBatch
      SubnetId:
        Ref: VpcRenderingWithBatchSubnet1SubnetADE6DAA0
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/cloud9/ec2env/Resource
  cloud9resizeLambdaServiceRole05E60486:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/cloud9/resizeLambda/ServiceRole/Resource
  cloud9resizeLambdaServiceRoleDefaultPolicy78F9CA52:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:DescribeInstances
              - ec2:ModifyVolume
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: cloud9resizeLambdaServiceRoleDefaultPolicy78F9CA52
      Roles:
        - Ref: cloud9resizeLambdaServiceRole05E60486
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/cloud9/resizeLambda/ServiceRole/DefaultPolicy/Resource
  cloud9resizeLambda901AA53D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3
          import cfnresponse


          def retrieve_cloud9_instance(env_id):
              print("Retrieving environment's instance...")

              client = boto3.client('ec2')

              instance_data = client.describe_instances(
                  Filters=[
                      {
                          'Name': 'tag:aws:cloud9:environment',
                          'Values': [
                              env_id,
                          ]
                      },
                  ]
              )['Reservations'][0]['Instances'][0]

              return instance_data['InstanceId'], instance_data['BlockDeviceMappings'][0]['Ebs']['VolumeId']


          def resize_volume(volume_id, new_size):
              print('Resizing EBS volume...')

              client = boto3.client('ec2')

              client.modify_volume(
                  VolumeId=volume_id,
                  Size=new_size
              )


          def handler(event, context):
              if event['RequestType'] == 'Create':
                  # Extract context variables
                  c9_env_id = event['ResourceProperties']['cloud9EnvId']
                  ebs_size = int(event['ResourceProperties']['ebsSize'])

                  try:
                      # Retrieve EC2 instance's identifier and its EBS volume's identifier
                      instance_id, volume_id = retrieve_cloud9_instance(c9_env_id)

                      # Resize the EBS volume
                      resize_volume(volume_id, ebs_size)
                  except Exception as e:
                      cfnresponse.send(event, context, cfnresponse.FAILED, {'Error': e.args[0]})
                      return

              cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
      Role:
        Fn::GetAtt:
          - cloud9resizeLambdaServiceRole05E60486
          - Arn
      Handler: index.handler
      Runtime: python3.7
      Timeout: 30
    DependsOn:
      - cloud9resizeLambdaServiceRoleDefaultPolicy78F9CA52
      - cloud9resizeLambdaServiceRole05E60486
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/cloud9/resizeLambda/Resource
  cloud9resizeLambdaCustomResource13CADC97:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - cloud9resizeLambda901AA53D
          - Arn
      cloud9EnvId:
        Ref: cloud9ec2env53572621
      ebsSize: 40
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/cloud9/resizeLambdaCustomResource/Default
  fisRole929947A2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: fis.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/fisRole/Resource
  fisRoleDefaultPolicy02E389FF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecs:DescribeClusterInstances
              - ecs:UpdateContainerInstancesState
              - ecs:ListContainerInstances
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: fisRoleDefaultPolicy02E389FF
      Roles:
        - Ref: fisRole929947A2
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/fisRole/DefaultPolicy/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WQQW/CMAyFfwv3EEY5cRurGJo0aVVB3FPXExltXCXOUBXlvy9tYcApn1+e/Gwv5TJby5fZq7q4OdTnRQCyKMOeFZxFiY68BRT5t/ny3HkWORnH1kMi75jaR8sjJ1+tWZOJYmgdEDIZjh0Mf8ciF4WvGg17XxnkQbtTSZ7xoKoG7/pd2zhHoNXQ+d88wIdhtMm5U4wX1V9jrtWG0zqnFg2LPYK3mvudJd+NAU/Cp/IGTgdsu0ZNjZ+VKNxKhjcP52nYiaJAsDKU2JHTTLafrnGrooCGfL2WYQvZ1vxqS2YcJrkeym2eRdGotqqVDO8p9bbkjaPQqk0xNJ1mfAtKZxzzJooxiqLnE5nFSq7lcvbjtJ5bb1i3KMvp/QNevyCA9gEAAA==
    Metadata:
      aws:cdk:path: RenderingWithBatchStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  Subnet1:
    Value:
      Ref: VpcRenderingWithBatchSubnet1SubnetADE6DAA0
  Subnet2:
    Value:
      Ref: VpcRenderingWithBatchSubnet2SubnetDC61207B
  BucketName:
    Value:
      Ref: bucket43879C71
  BlendFileName:
    Value: blendfile.blend
  RepositoryName:
    Value:
      Ref: repository9F1A3F0B
  LaunchTemplateName:
    Value: RenderingWithBatch
  FISRole:
    Value:
      Fn::GetAtt:
        - fisRole929947A2
        - Arn
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
